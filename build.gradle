/*
* This file was generated by the Gradle 'init' task.
*
* This generated file contains a sample Java library project to get you started.
* For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
* User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
*/



plugins {
id 'org.springframework.boot' version '2.5.3'
id 'io.spring.dependency-management' version '1.0.11.RELEASE'
// Apply the java-library plugin for API and implementation separation.
id 'java-library'
}



group = 'com.itl'
version = '0.0.1'
sourceCompatibility = '17'



repositories {
	maven {
        url "http://172.21.0.66:8081/repository/maven-central/"
		allowInsecureProtocol = true
    }
	//mavenCentral()
}



ext {
set('springCloudVersion', "2020.0.3")
}



configurations.all {
exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}




dependencies {
// Use JUnit Jupiter for testing.
//testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'



implementation 'org.springframework.cloud:spring-cloud-starter-config'
implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
implementation 'org.springframework.boot:spring-boot-starter-web'
//implementation 'org.springframework.boot:spring-boot-starter-webflux'
implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
implementation 'org.hibernate:hibernate-envers:5.5.5.Final'
implementation 'net.sf.dozer:dozer:5.5.1'
implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.2'
implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.2'
implementation 'org.apache.httpcomponents:httpclient:4.5.13'
//implementation 'org.springframework.boot:spring-boot-starter-security'
implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail'

// https://mvnrepository.com/artifact/mysql/mysql-connector-java
implementation 'mysql:mysql-connector-java:8.0.26'
// https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
// https://mvnrepository.com/artifact/cn.apiclub.tool/simplecaptcha
implementation group: 'cn.apiclub.tool', name: 'simplecaptcha', version: '1.2.2'



implementation 'org.apache.logging.log4j:log4j-core:2.14.1'
implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.14.1'
implementation 'org.slf4j:slf4j-api:1.7.32'
//implementation 'org.springframework.cloud:spring-cloud-starter-sleuth:3.0.4'
//implementation 'org.springframework.cloud:spring-cloud-starter-zipkin:2.2.8.RELEASE'
implementation 'io.zipkin.brave:brave-context-log4j2'
//implementation 'io.zipkin.reporter2:zipkin-sender-okhttp3'
//implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin:3.0.3'
implementation 'io.springfox:springfox-boot-starter:3.0.0'
//implementation 'io.jsonwebtoken:jjwt:0.9.1'
compileOnly 'org.projectlombok:lombok:1.18.24'
annotationProcessor 'org.projectlombok:lombok:1.18.24'
developmentOnly 'org.springframework.boot:spring-boot-devtools'

implementation 'org.apache.directory.studio:org.apache.commons.io:2.4'



implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail'

//This for Spring Boot Admin Module
//implementation 'org.springframework.boot:spring-boot-starter-actuator'
//implementation 'io.micrometer:micrometer-registry-prometheus:1.8.1'
implementation 'de.codecentric:spring-boot-admin-starter-client:2.5.0'

//implementation 'org.springframework.boot:spring-boot-starter-amqp'
//implementation 'org.springframework.amqp:spring-rabbit-test'
implementation 'org.springframework.boot:spring-boot-starter-test'

//implementation 'org.springframework.boot:spring-boot-starter-actuator'
implementation 'org.springframework.boot:spring-boot-starter-aop'
implementation group: 'org.springframework.kafka', name: 'spring-kafka'
//implementation 'org.springframework.boot:spring-boot-devtools'
//implementation 'io.github.resilience4j:resilience4j-spring-boot2:1.7.0'
//implementation 'io.github.resilience4j:resilience4j-micrometer:1.7.0'
//implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.5.0'
//implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.5.0'

}



dependencyManagement {
imports {
mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
}
}



tasks.named('test') {
// Use JUnit Platform for unit tests.
useJUnitPlatform()
}
